@startuml
skinparam monochrome true
skinparam shadowing false
skinparam defaultFontName "URW DIN SemiCond"
skinparam defaultFontSize 14
skinparam roundcorner 10
skinparam classAttributeIconSize 0


class View{
  {static} DefaultViewClass
  {static} caches
  --
  {static} factory(file, data)
  {static} clearCache()
  --
  View(file, data)
  render()
}

class Controller{
  {static} mixins
  {static} suppressActionNotFound

  {static} STATE_CLIENT
  {static} STATE_QUERY
  {static} STATE_PARAMS
  {static} STATE_REQUEST
  {static} STATE_LANGUAGE
  {static} STATE_CLIENT_IP
  {static} STATE_HOSTNAME
  {static} STATE_CHECKPOINT
  {static} STATE_ACTION
  {static} STATE_FULL_ACTION_NAME
  {static} STATE_HEADERS
  {static} STATE_HEADER_SENT
  {static} STATE_COOKIES

  error
  body
  status
  state
..

  Controller(request)
  async execute(actionName)
  async before()
  async mixinAction(fullActionName)
  async after()

.. extend functions ..
  static mixins = [...super.mixins, MixinA]

.. default route ..
  async action_index()

.. user flow ..
  async exit(code)
  async redirect(location, keepQueryString= false)
  async forbidden(message)
  async onExit()
}

abstract class ControllerMixin{
  state.get(CLIENT) : Controller

  {static} init(state)
  {static} async setup(state)
  {static} async before(state)
  {static} async execute(action, state)
  {static} async action_xxx(state)
  {static} async after(state)
  {static} async exit(code)
}

Controller <-- ControllerMixin

@enduml